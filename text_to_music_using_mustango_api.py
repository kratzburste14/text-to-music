# -*- coding: utf-8 -*-
"""Text-To-Music Using Mustango API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j2MAB4vA0t7dgPfNP8--zzamVMVl2HRR
"""

!pip install gradio_client

!pip install streamlit

#import streamlit as st
#import os
#import requests
#from gradio_client import Client

#client = Client("https://declare-lab-mustango.hf.space/--replicas/a2hvo/")
#result = client.predict(
    #"A piece of music that combines Electronic synthesizers and violins, violas, and cellos to create a sense of wonder, adventure, and emotion. The main melody is carried by a combination of electronic synthesizers and strings. It's a simple yet haunting melody that repeats and evolves throughout the piece, creating a sense of continuity and progression. The rhythm should often pulsate and drive, creating a sense of urgency and momentum. It's characterized by a steady beat, typically in a 4/4 time signature, with occasional syncopated rhythms to add interest and complexity. The timbre of the music is often lush and expansive, with layers of electronic and orchestral sounds blending together to create a cinematic landscape. Electronic elements may include synthesizers, pads, and electronic percussion, while orchestral elements contribute warmth and depth to the sound.",    # str  in 'Prompt' Textbox component
    #200,    # float (numeric value between 100 and 200) in 'Steps' Slider component
    #3,    # float (numeric value between 1 and 10) in 'Guidance Scale' Slider component
                            #api_name="/predict"
#)

#from IPython.display import Audio

# Assuming result is the file path returned by client.predict
#file_path = result

# Play the audio file
#Audio(file_path)

# Commented out IPython magic to ensure Python compatibility.
# %%writefile main.py
# import streamlit as st
# import requests
# from gradio_client import Client
# from IPython.display import Audio
# 
# st.title("Music Generator")
# 
# prompt = st.text_area("Enter your music description here", "")
# 
# steps = st.slider("Select steps (100-200)", 100, 200, 200)
# guidance_scale = st.slider("Select guidance scale (1-10)", 1, 10, 3)
# 
# client = Client("https://declare-lab-mustango.hf.space/--replicas/a2hvo/")
# 
# if st.button("Generate Music"):
#     with st.spinner("Generating music..."):
#         result = client.predict(
#             prompt,
#             steps,
#             guidance_scale,
#             api_name="/predict"
#         )
#     audio_file_path = result
#     st.audio(audio_file_path)
# 
# 
# 
#

!npm install localtunnel

import urllib
print("Password/Enpoint IP for localtunnel is:",urllib.request.urlopen('https://ipv4.icanhazip.com').read().decode('utf8').strip("\n"))

!streamlit run main.py &>/content/logs.txt &

!npx localtunnel --port 8501